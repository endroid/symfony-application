# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'
    mailer_user: info@endroid.nl

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../src/{Entity,Migrations,Tests}'

    # controllers are imported separately to make sure they
    # have the tag that allows actions to type-hint services
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # aliases
    FOS\OAuthServerBundle\Entity\ClientManager: '@fos_oauth_server.client_manager.default'
    FOS\UserBundle\Model\UserManagerInterface: '@fos_user.user_manager.default'

    App\Security\UserProvider:
        $properties: {}

    admin.model_manager:
        class: App\Admin\ModelManager
        arguments: ['@doctrine']

    admin.service:
        class: App\Admin\ServiceAdmin
        arguments: [~, App\Entity\Knife\Service, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Service, group: Content }
        calls:
            - [ addChild, [ '@admin.field' ] ]
            - [ addChild, [ '@admin.product' ] ]
        public: true

    admin.field:
        class: App\Admin\FieldAdmin
        arguments: [~, App\Entity\Knife\AbstractField, ~]
        calls:
            - [ setSubClasses, [{check: App\Entity\Knife\CheckField, text: App\Entity\Knife\TextField}]]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Field, show_in_dashboard: false }
        public: true

    admin.product:
        class: App\Admin\ProductAdmin
        arguments: [~, App\Entity\Knife\Product, ~]
        tags:
            - { name: sonata.admin, model_manager: admin.model_manager, manager_type: orm, label: Product, show_in_dashboard: false }
        public: true
